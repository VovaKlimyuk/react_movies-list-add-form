{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","_ref$label","label","_ref$required","required","_ref$onChange","onChange","_ref$checkUrl","checkUrl","_useState","useState","concat","Math","random","toString","slice","id","_slicedToArray","_useState3","_useState4","touched","setTouched","hasError","htmlFor","classNames","type","placeholder","event","target","onBlur","pattern","NewMovie","onAdd","_useState2","count","setCount","newMovie","setNewMovie","url","match","buttonDisable","current","_objectSpread","_defineProperty","onSubmit","preventDefault","prevCount","disabled","App","moviesFromServer","setMovies","_toConsumableArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2415aa1e.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  required?: boolean,\n  onChange?: (name: string, newValue: string) => void,\n  checkUrl?: (value: string) => boolean,\n};\n\nfunction getRandomDigits() {\n  return Math.random().toString().slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  required = false,\n  onChange = () => {},\n  checkUrl = () => true,\n}) => {\n  // generage a unique id once on component load\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  // To show errors only if the field was touched (onBlur)\n  const [touched, setTouched] = useState(false);\n  const hasError = touched && required && !value;\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n      <div className=\"control\">\n        <input\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          type=\"text\"\n          name={name}\n          placeholder={`Enter ${label}`}\n          value={value}\n          onChange={event => onChange(event.target.name, event.target.value)}\n          onBlur={() => setTouched(true)}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n\n      {value && !checkUrl(value) && (\n        <p className=\"help is-danger\">{`${label} is incorrect`}</p>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\n// eslint-disable-next-line max-len\nconst pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n\ntype Props = {\n  onAdd: (newMovie: Movie) => void,\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  // Increase the count after successful form submission\n  // to reset touched status of all the `Field`s\n  const [count, setCount] = useState(0);\n  const [newMovie, setNewMovie] = useState({\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  });\n\n  const checkUrl = (url: string) => {\n    return (url.match(pattern) || [])[0] === url;\n  };\n\n  const buttonDisable = !newMovie.title\n    || (!newMovie.imgUrl || !checkUrl(newMovie.imgUrl))\n    || (!newMovie.imdbUrl || !checkUrl(newMovie.imdbUrl))\n    || !newMovie.imdbId;\n\n  const clearInputsValues = () => {\n    setNewMovie({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  };\n\n  const onChange = (name: string, value: string) => {\n    setNewMovie(current => ({\n      ...current,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    onAdd(newMovie);\n    setCount(prevCount => prevCount + 1);\n    clearInputsValues();\n  };\n\n  return (\n    <form className=\"NewMovie\" key={count} onSubmit={handleSubmit}>\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={newMovie.title}\n        onChange={onChange}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={newMovie.description}\n        onChange={onChange}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={newMovie.imgUrl}\n        onChange={onChange}\n        checkUrl={checkUrl}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={newMovie.imdbUrl}\n        onChange={onChange}\n        checkUrl={checkUrl}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={newMovie.imdbId}\n        onChange={onChange}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={buttonDisable}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n\n  const onAdd = (newMovie: Movie) => {\n    setMovies(current => ([\n      ...current,\n      newMovie,\n    ]));\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={onAdd} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}